// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetAdmin.Web.Infra;

namespace PetAdmin.Web.Migrations
{
    [DbContext(typeof(PetContext))]
    [Migration("20210202023044_LatitudeLongitudeDouble")]
    partial class LatitudeLongitudeDouble
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClientId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnName("CreatedUserId");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnName("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<string>("DocumentInformation")
                        .HasColumnName("DocumentInformation");

                    b.Property<int?>("DocumentTypeId")
                        .HasColumnName("DocumentTypeId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnName("LastModificationUserId");

                    b.Property<long>("LocationId")
                        .HasColumnName("LocationId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnName("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("PhotoName")
                        .HasColumnName("PhotoName")
                        .HasMaxLength(180);

                    b.Property<string>("PhotoUrl")
                        .HasColumnName("PhotoUrl")
                        .HasMaxLength(300);

                    b.Property<int>("ProfileTypeId")
                        .HasColumnName("ProfileTypeId");

                    b.Property<Guid>("Uid")
                        .HasColumnName("ClientUid");

                    b.Property<Guid>("UserId")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("LocationId")
                        .HasName("x_Client_LocationId");

                    b.HasIndex("UserId")
                        .HasName("x_Client_UserId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EmployeeId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientId");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnName("CreatedUserId");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnName("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnName("Email")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnName("LastModificationUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<Guid>("Uid")
                        .HasColumnName("EmployeeUid");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .HasName("x_Employee_ClientId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LocationId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnName("CityName")
                        .HasMaxLength(125)
                        .IsUnicode(false);

                    b.Property<string>("Complement")
                        .HasColumnName("Complement")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("CountryCode")
                        .HasColumnName("CountryCode")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnName("CreatedUserId");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnName("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnName("LastModificationUserId");

                    b.Property<double>("Latitude")
                        .HasColumnName("Latitude");

                    b.Property<double>("Longitue")
                        .HasColumnName("Longitue");

                    b.Property<string>("Neighborhood")
                        .HasColumnName("Neighborhood")
                        .HasMaxLength(125)
                        .IsUnicode(false);

                    b.Property<string>("PostalCode")
                        .HasColumnName("PostalCode")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("StateCode")
                        .HasColumnName("StateCode")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("StreetName")
                        .HasColumnName("StreetName")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<string>("StreetNumber")
                        .HasColumnName("StreetNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<Guid>("Uid")
                        .HasColumnName("LocationUid");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.Pet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PetId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnName("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Breed")
                        .HasColumnName("Breed")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("Coat")
                        .HasColumnName("Coat");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnName("CreatedUserId");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnName("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<int>("Gender")
                        .HasColumnName("Gender");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsClub")
                        .HasColumnName("IsClub");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnName("LastModificationUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("Note")
                        .HasColumnName("Note")
                        .HasMaxLength(400)
                        .IsUnicode(false);

                    b.Property<long>("PetLoverId");

                    b.Property<int>("PetTypeId")
                        .HasColumnName("PetTypeId");

                    b.Property<string>("PhotoName")
                        .HasColumnName("PhotoName")
                        .HasMaxLength(180);

                    b.Property<string>("PhotoUrl")
                        .HasColumnName("PhotoUrl")
                        .HasMaxLength(300);

                    b.Property<int>("Size")
                        .HasColumnName("Size");

                    b.Property<Guid>("Uid")
                        .HasColumnName("PetUid");

                    b.HasKey("Id");

                    b.HasIndex("PetLoverId")
                        .HasName("x_Pet_PetLoverId");

                    b.ToTable("Pet");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.PetLover", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PetLoverId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ClientId")
                        .HasColumnName("ClientId");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnName("CreatedUserId");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnName("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnName("Email")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("Gender")
                        .HasColumnName("Gender");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsClub")
                        .HasColumnName("IsClub");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnName("LastModificationUserId");

                    b.Property<long>("LocationId")
                        .HasColumnName("LocationId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<Guid>("Uid")
                        .HasColumnName("PetLoverUid");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .HasName("x_PetLover_ClientId");

                    b.HasIndex("LocationId")
                        .HasName("x_PetLover_LocationId");

                    b.HasIndex("UserId")
                        .HasName("x_PetLover_UserId");

                    b.ToTable("PetLover");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.PetLoverLocationClient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientId");

                    b.Property<double>("Distance");

                    b.Property<long>("PetLoverId");

                    b.Property<Guid>("Uid");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("PetLoverId");

                    b.ToTable("PetLoverLocationClient");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.Schedule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ScheduleId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnName("CreatedUserId");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime>("Date")
                        .HasColumnName("Date")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateWithHour")
                        .HasColumnName("DateWithHour");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnName("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<long>("EmployeeId");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnName("LastModificationUserId");

                    b.Property<int?>("Period")
                        .HasColumnName("Period");

                    b.Property<int>("QuantityAllowed")
                        .HasColumnName("QuantityAllowed");

                    b.Property<int>("QuantityOccupied")
                        .HasColumnName("QuantityOccupied");

                    b.Property<int>("Status")
                        .HasColumnName("Status");

                    b.Property<Guid>("Uid")
                        .HasColumnName("ScheduleUid");

                    b.HasKey("Id");

                    b.HasAlternateKey("EmployeeId", "DateWithHour")
                        .HasName("UC_Employee_DateWithHour");

                    b.HasIndex("EmployeeId")
                        .HasName("x_Schedule_EmployeeId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.ScheduleItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ScheduleItemId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnName("CreatedUserId");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnName("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnName("LastModificationUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<Guid>("Uid")
                        .HasColumnName("ScheduleItemUid");

                    b.HasKey("Id");

                    b.ToTable("ScheduleItem");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.ScheduleItemClient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ScheduleItemClientId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClientId");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnName("CreatedUserId");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnName("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnName("LastModificationUserId");

                    b.Property<long>("ScheduleItemId");

                    b.Property<Guid>("Uid")
                        .HasColumnName("ScheduleItemClientUid");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .HasName("x_ScheduleItemClient_ClientId");

                    b.HasIndex("ScheduleItemId")
                        .HasName("x_ScheduleItemClient_ScheduleItemId");

                    b.ToTable("ScheduleItemClient");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.ScheduleItemEmployee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ScheduleItemEmployeeId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnName("CreatedUserId");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnName("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<long>("EmployeeId");

                    b.Property<int?>("Hour")
                        .HasColumnName("Hour");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnName("LastModificationUserId");

                    b.Property<int?>("Minutes")
                        .HasColumnName("Minutes");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<decimal?>("Price")
                        .HasColumnName("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ScheduleItemId");

                    b.Property<Guid>("Uid")
                        .HasColumnName("ScheduleItemEmployeeUid");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .HasName("x_ScheduleItemEmployee_EmployeeId");

                    b.HasIndex("ScheduleItemId")
                        .HasName("x_ScheduleItemEmployee_ScheduleItemId");

                    b.ToTable("ScheduleItemEmployee");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.SchedulePet", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SchedulePetId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnName("CreatedUserId");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnName("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnName("LastModificationUserId");

                    b.Property<string>("Note")
                        .HasColumnName("Note")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<long?>("PetId");

                    b.Property<long?>("PetLoverId");

                    b.Property<long?>("ScheduleId");

                    b.Property<long?>("ScheduleItemEmployeeId");

                    b.Property<int>("Status")
                        .HasColumnName("Status");

                    b.Property<Guid>("Uid")
                        .HasColumnName("SchedulePetUid");

                    b.HasKey("Id");

                    b.HasIndex("PetId")
                        .HasName("x_SchedulePet_PetId");

                    b.HasIndex("PetLoverId")
                        .HasName("x_SchedulePet_PetLoverId");

                    b.HasIndex("ScheduleId")
                        .HasName("x_SchedulePet_ScheduleId");

                    b.HasIndex("ScheduleItemEmployeeId")
                        .HasName("x_SchedulePet_ScheduleItemEmployeeId");

                    b.ToTable("SchedulePet");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.Vaccine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VaccineId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClinicName")
                        .HasColumnName("ClinicName");

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnName("CreatedUserId");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime>("Date")
                        .HasColumnName("Date");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnName("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnName("LastModificationUserId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name");

                    b.Property<string>("Note")
                        .HasColumnName("Note");

                    b.Property<long>("PetId")
                        .HasColumnName("PetId");

                    b.Property<string>("PhotoName")
                        .HasColumnName("PhotoName")
                        .HasMaxLength(180);

                    b.Property<string>("PhotoUrl")
                        .HasColumnName("PhotoUrl")
                        .HasMaxLength(300);

                    b.Property<DateTime?>("RevaccineDate")
                        .HasColumnName("RevaccineDate");

                    b.Property<Guid>("Uid")
                        .HasColumnName("VaccineUid");

                    b.HasKey("Id");

                    b.HasIndex("PetId")
                        .HasName("x_Vaccine_PetId");

                    b.ToTable("Vaccine");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<Guid>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<Guid?>("CreatedUserId")
                        .HasColumnName("CreatedUserId");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<Guid?>("DeletedUserId")
                        .HasColumnName("DeletedUserId");

                    b.Property<DateTime?>("DeletionTime")
                        .HasColumnName("DeletionTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("IsActive")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsDeleted")
                        .HasColumnName("IsDeleted");

                    b.Property<DateTime?>("LastModificationTime")
                        .HasColumnName("LastModificationTime")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("LastModificationUserId")
                        .HasColumnName("LastModificationUserId");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<int>("UserTypeId")
                        .HasColumnName("UserTypeId");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<Guid>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<Guid>("RoleId");

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.UserToken", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<DateTime>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CreationTime")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.Client", b =>
                {
                    b.HasOne("PetAdmin.Web.Models.Domain.Location", "Location")
                        .WithMany("ClientList")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK_Client_Location");

                    b.HasOne("PetAdmin.Web.Models.User", "User")
                        .WithMany("ClientList")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Client_User");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.Employee", b =>
                {
                    b.HasOne("PetAdmin.Web.Models.Domain.Client", "Client")
                        .WithMany("EmployeeList")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_Employee_Client")
                        .HasAnnotation("Relational:ColumnName", "ClientId");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.Pet", b =>
                {
                    b.HasOne("PetAdmin.Web.Models.Domain.PetLover", "PetLover")
                        .WithMany("PetList")
                        .HasForeignKey("PetLoverId")
                        .HasConstraintName("FK_Pet_PetLover")
                        .HasAnnotation("Relational:ColumnName", "PetLoverId");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.PetLover", b =>
                {
                    b.HasOne("PetAdmin.Web.Models.Domain.Client", "Client")
                        .WithMany("PetLoverList")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_PetLover_Client");

                    b.HasOne("PetAdmin.Web.Models.Domain.Location", "Location")
                        .WithMany("PetLoverList")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK_PetLover_Location");

                    b.HasOne("PetAdmin.Web.Models.User", "User")
                        .WithMany("PetLoverList")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_PetLover_User");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.PetLoverLocationClient", b =>
                {
                    b.HasOne("PetAdmin.Web.Models.Domain.Client", "Client")
                        .WithMany("PetLoverLocationClientList")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PetAdmin.Web.Models.Domain.PetLover", "PetLover")
                        .WithMany("PetLoverLocationClientList")
                        .HasForeignKey("PetLoverId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.Schedule", b =>
                {
                    b.HasOne("PetAdmin.Web.Models.Domain.Employee", "Employee")
                        .WithMany("ScheduleList")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Schedule_Employee");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.ScheduleItemClient", b =>
                {
                    b.HasOne("PetAdmin.Web.Models.Domain.Client", "Client")
                        .WithMany("ScheduleItemClientList")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_ScheduleItemClient_Client");

                    b.HasOne("PetAdmin.Web.Models.Domain.ScheduleItem", "ScheduleItem")
                        .WithMany("ScheduleItemClientList")
                        .HasForeignKey("ScheduleItemId")
                        .HasConstraintName("FK_ScheduleItemClient_ScheduleItem");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.ScheduleItemEmployee", b =>
                {
                    b.HasOne("PetAdmin.Web.Models.Domain.Employee", "Employee")
                        .WithMany("ScheduleItemEmployeeList")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_ScheduleItemEmployee_Employee");

                    b.HasOne("PetAdmin.Web.Models.Domain.ScheduleItem", "ScheduleItem")
                        .WithMany("ScheduleItemEmployeeList")
                        .HasForeignKey("ScheduleItemId")
                        .HasConstraintName("FK_ScheduleItemEmployee_ScheduleItem");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.SchedulePet", b =>
                {
                    b.HasOne("PetAdmin.Web.Models.Domain.Pet", "Pet")
                        .WithMany("SchedulePetList")
                        .HasForeignKey("PetId")
                        .HasConstraintName("FK_SchedulePet_Pet");

                    b.HasOne("PetAdmin.Web.Models.Domain.PetLover", "PetLover")
                        .WithMany("SchedulePetList")
                        .HasForeignKey("PetLoverId")
                        .HasConstraintName("FK_SchedulePet_PetLover");

                    b.HasOne("PetAdmin.Web.Models.Domain.Schedule", "Schedule")
                        .WithMany("SchedulePetList")
                        .HasForeignKey("ScheduleId")
                        .HasConstraintName("FK_SchedulePet_Schedule");

                    b.HasOne("PetAdmin.Web.Models.Domain.ScheduleItemEmployee", "ScheduleItemEmployee")
                        .WithMany("SchedulePetList")
                        .HasForeignKey("ScheduleItemEmployeeId")
                        .HasConstraintName("FK_SchedulePet_ScheduleItemEmployee");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.Domain.Vaccine", b =>
                {
                    b.HasOne("PetAdmin.Web.Models.Domain.Pet", "Pet")
                        .WithMany("VaccineList")
                        .HasForeignKey("PetId")
                        .HasConstraintName("FK_Vaccine_Pet");
                });

            modelBuilder.Entity("PetAdmin.Web.Models.RoleClaim", b =>
                {
                    b.HasOne("PetAdmin.Web.Models.Roles")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PetAdmin.Web.Models.UserClaim", b =>
                {
                    b.HasOne("PetAdmin.Web.Models.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PetAdmin.Web.Models.UserLogin", b =>
                {
                    b.HasOne("PetAdmin.Web.Models.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PetAdmin.Web.Models.UserRole", b =>
                {
                    b.HasOne("PetAdmin.Web.Models.Roles")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PetAdmin.Web.Models.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PetAdmin.Web.Models.UserToken", b =>
                {
                    b.HasOne("PetAdmin.Web.Models.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
